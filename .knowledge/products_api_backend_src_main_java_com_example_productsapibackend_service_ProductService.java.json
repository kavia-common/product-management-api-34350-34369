{"is_source_file": true, "format": "Java", "description": "This Java source file defines the ProductService class, which manages product operations including retrieval, creation, updating, and deletion of product entities in a backend service.", "external_files": ["com/example/productsapibackend/dto/ProductDtos.java", "com/example/productsapibackend/model/Product.java", "com/example/productsapibackend/repository/ProductRepository.java", "org.springframework.stereotype.Service", "org.springframework.transaction.annotation.Transactional"], "external_methods": ["repository.findAll()", "repository.findById(Long)", "repository.save(Product)", "repository.existsById(Long)", "repository.deleteById(Long)", "Product.getId()", "Product.getName()", "Product.getPrice()", "Product.getQuantity()", "Product.setName(String)", "Product.setPrice(BigDecimal)", "Product.setQuantity(int)"], "published": ["ProductService.getAll", "ProductService.getById", "ProductService.create", "ProductService.update", "ProductService.delete"], "classes": [{"name": "ProductService", "description": "Service managing product operations such as CRUD (Create, Read, Update, Delete).", "methods": [{"name": "getAll", "description": "Returns all products as response DTOs."}, {"name": "getById", "description": "Returns a product by id or throws NotFoundException."}, {"name": "create", "description": "Creates a new product based on the provided request DTO."}, {"name": "update", "description": "Updates an existing product with new data or throws NotFoundException."}, {"name": "delete", "description": "Deletes a product by id, throwing NotFoundException if it doesn't exist."}]}], "methods": [{"name": "ProductService.getAll", "description": "Returns a list of all products as response DTOs."}, {"name": "ProductService.getById", "description": "Fetches a product by its ID, throws exception if not found."}, {"name": "ProductService.create", "description": "Creates a new product entity and returns its response DTO."}, {"name": "ProductService.update", "description": "Updates an existing product with new data."}, {"name": "ProductService.delete", "description": "Deletes a product by ID."}], "calls": ["repository.findAll()", "repository.findById(id)", "repository.save(p)", "repository.existsById(id)", "repository.deleteById(id)"], "search-terms": ["ProductService", "product management", "CRUD", "product repository", "product DTO", "Spring Service"], "state": 2, "file_id": 9, "knowledge_revision": 19, "git_revision": "", "hash": "80c1becb36a3152ed6d754d91fb56a72", "format-version": 4, "code-base-name": "products_api_backend", "filename": "products_api_backend/src/main/java/com/example/productsapibackend/service/ProductService.java", "revision_history": [{"19": ""}]}